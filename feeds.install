<?php
// $Id: feeds.install,v 1.3 2009/09/21 14:55:47 alexb Exp $
/**
 * @file
 */

/**
 * Implementation of hook_schema().
 */
function feeds_schema() {
  $schema['feeds_config'] = array(
    'description' => 'Configuration of feeds objects.',
    'export' => array(
      'key' => 'id',
      'identifier' => 'feed_object',
      'default hook' => 'feeds',  // Function hook name.
      'api' => array(
        'owner' => 'data',
        'api' => 'feeds_default',  // Base name for api include files.
        'minimum_version' => 1,
        'current_version' => 1,
      ),
    ),
    'fields' => array(
      'id' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
        'description' => 'Id of the fields object.',
      ),
      'class' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
        'description' => 'Class name of the feeds plugin.',
      ),
      'config' => array(
        'type' => 'text',
        'not null' => FALSE,
        'description' => 'Configuration of the feeds object.',
        'serialize' => TRUE,
      ),
    ),
    'indexes' => array(
        'id' => array('id'),
        'class' => array('class'),
      ),
  );
  $schema['feeds_source'] = array(
    'description' => 'Source definitions for feeds.',
    'fields' => array(
      'id' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
        'description' => 'Id of the feed configuration.',
      ),
      'class' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
        'description' => 'Class name of the feeds plugin.',
      ),
      'nid' => array(
        'type' => 'int',
        'not null' => FALSE,
        'unsigned' => TRUE,
        'description' => 'Node nid if this particular source is attached to a node.',
      ),
      'source' => array(
        'type' => 'text',
        'not null' => FALSE,
        'description' => 'Definition of the source.',
        'serialize' => TRUE,
      ),
    ),
    'indexes' => array(
        'id' => array('id'),
        'nid' => array('nid'),
        'class' => array('class'),
      ),
  );
  $schema['feeds_node_item'] = array(
    'description' => t('Stores additional information about feed item nodes. Used by FeedsNodeProcessor.'),
    'fields' => array(
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => t("Primary Key: The feed item node's nid."),
      ),
      'id' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
        'description' => 'The id of the fields object that is the producer of this item.',
      ),
      'feed_nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => t("Node id of the owner feed, if available."),
      ),
      'imported' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => t('Import date of the feed item, as a Unix timestamp.'),
      ),
      'url' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => t('Link to the feed item.'),
      ),
      'guid' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => t('Unique identifier for the feed item.'),
      ),
    ),
    'primary key' => array('nid'),
    'indexes' => array(
      'nid' => array('nid'),
      'id' => array('id'),
      'feed_nid' => array('feed_nid'),
      'imported' => array('imported'),
      'url' => array(array('url', 255)),
      'guid' => array(array('guid', 255)),
    ),
  );
  return $schema;
}

/**
 * Implementation of hook_install().
 */
function feeds_install() {
  // Create tables.
  drupal_install_schema('feeds');
}

/**
 * Implementation of hook_uninstall().
 */
function feeds_uninstall() {
  // Remove tables.
  drupal_uninstall_schema('feeds');
}

/**
 * Will delete this one before first release, for convenience...
 */
function feeds_update_6001() {
  $schema = feeds_schema();
  $ret = array();
  db_create_table($ret, 'feeds_node_item', $schema['feeds_node_item']);
  return $ret;
}